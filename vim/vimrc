"      .-.     .-.     .-.     .-.     .-.     .-.     .-.
" `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'
"
" https://github.com/rafi/vim-config

" Runtime and Plugins
" -------------------------------------------------

if &compatible
	set nocompatible
endif

" Set main configuration directory, and where cache is stored.
let $VIMPATH = fnamemodify(resolve(expand('<sfile>:p')), ':h')
let $VARPATH = expand(($XDG_CACHE_HOME ? $XDG_CACHE_HOME : '~/.cache').'/vim')

let g:dein#install_max_processes = 16
let g:dein#install_progress_type = 'echo'
let g:dein#enable_notification = 0
let g:dein#install_log_filename = $VARPATH.'/dein.log'

function! s:dein_check_ruby() abort
	call system("ruby -e 'require \"json\"; require \"yaml\"'")
	return (v:shell_error == 0) ? 1 : 0
endfunction

function! s:source_file(path, ...) abort
	let use_global = get(a:000, 0, ! has('vim_starting'))
	let abspath = resolve(expand($VIMPATH.'/'.a:path))
	if ! use_global
		execute 'source' fnameescape(abspath)
		return
	endif

	let content = map(readfile(abspath),
		\ "substitute(v:val, '^\\W*\\zsset\\ze\\W', 'setglobal', '')")
	let tempfile = tempname()
	try
		call writefile(content, tempfile)
		execute printf('source %s', fnameescape(tempfile))
	finally
		if filereadable(tempfile)
			call delete(tempfile)
		endif
	endtry
endfunction

" Set augroup
augroup MyAutoCmd
	autocmd!
	autocmd CursorHold *? syntax sync minlines=300
augroup END

" Initialize base requirements
if has('vim_starting')
	call s:source_file('init.vim')
	if has('nvim')
		" Neovim settings
		call s:source_file('neovim.vim')
	elseif ! has('gui_running') && ! has('win32') && ! has('win64')
		" Linux terminal settings
		call s:source_file('terminal.vim')
	endif
endif

" Initialize dein.vim (package manager)
let s:path = expand('$VARPATH/dein')
let s:plugins_path = expand('$VIMPATH/plugins.toml')
let s:user_plugins_path = expand('$VIMPATH/local.plugins.toml')
if dein#load_state(s:path)
	call dein#begin(s:path, [expand('<sfile>'), s:plugins_path])
	call dein#load_toml(s:plugins_path)
	if filereadable(s:user_plugins_path)
		call dein#load_toml(s:user_plugins_path)
	endif

	call dein#end()
	call dein#save_state()
	if dein#check_install()
		if ! has('nvim')
			set nomore
		endif
		call dein#install()
	endif
endif

call s:source_file('plugins/plugins.vim')

filetype plugin indent on
syntax enable

call dein#call_hook('source')
call dein#call_hook('post_source')

" Loading configuration modules
call s:source_file('general.vim')
call s:source_file('filetype.vim')
call s:source_file('mappings.vim')
call s:source_file('theme.vim')

" Load user custom local settings
if filereadable(expand('$VIMPATH/local.vim'))
	call s:source_file('local.vim')
endif
set secure

" vim: set ts=2 sw=2 tw=80 noet :